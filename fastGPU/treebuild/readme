Tree construction using dynamic parallelism

to compile:

single precision:
nvcc -O3 -o treebuild  treebuild.cu -arch=sm_35 -Xptxas=-v -lcudadevrt -rdc=true -g  -DPLUMMER -DNPERLEAF=16 -maxrregcount=32

double precision:
nvcc -O3 -o treebuild  treebuild.cu -arch=sm_35 -Xptxas=-v -lcudadevrt -rdc=true -g  -DPLUMMER -DNPERLEAF=16 -maxrregcount=48 -DFP64


to try out scan-based kernel (slower) do this:
nvcc -O3 -o treebuild  treebuild_scan.cu -arch=sm_35 -Xptxas=-v -lcudadevrt -rdc=true -g  -DPLUMMER -DNPERLEAF=16 -maxrregcount=32  -DNWARPS_OCTREE2=3  
or
nvcc -O3 -o treebuild  treebuild_scan.cu -arch=sm_35 -Xptxas=-v -lcudadevrt -rdc=true -g  -DPLUMMER -DNPERLEAF=16 -maxrregcount=32  -DNWARPS_OCTREE2=4
or
nvcc -O3 -o treebuild  treebuild_scan.cu -arch=sm_35 -Xptxas=-v -lcudadevrt -rdc=true -g  -DPLUMMER -DNPERLEAF=16 -maxrregcount=32  -DNWARPS_OCTREE2=5

/* warning: possible compiler bug, cuda 5.0 */
using referShared sometimes produces erroenous results:
$ nvcc -O3 -o treebuild  treebuild_scan.cu -arch=sm_35 -Xptxas=-v -lcudadevrt -rdc=true -g  -DNPERLEAF=16  -DPLUMMER  -maxrregcount=32 
(2nd argument controls preferShared:  0-disable and use preferEqual, 1-enable)
$ ./treebuild 20000000  1
 nptcl  = 20000000
 nb_leaf= 19999556
 nnodes = 596463
 nleaves= 4041690
 ncells=  4638153
 nlevels= 15
 buildOctree done in 0.314011 sec : 63.692 Mptcl/sec

using PreferEqual produces correct results:
$ ./treebuild 20000000 0
 nptcl  = 20000000
 nb_leaf= 20000000
 nnodes = 596463
 nleaves= 4041848
 ncells=  4638311
 nlevels= 15
 buildOctree done in 0.340169 sec : 58.7943 Mptcl/sec

